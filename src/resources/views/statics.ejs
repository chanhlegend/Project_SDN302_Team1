<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/statics.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
  </head>
  
  <body>
    <%- include('partials/header') %>
    <div class="stats-container">
      <div class="stat-card">
        <div class="stat-icon">üì¶</div>
        <div class="stat-info">
          <h3>S·∫£n Ph·∫©m ƒêang B√°n</h3>
          <div class="stat-number"><%= stats.activeProducts %></div>
        </div>
      </div>

      <div class="stat-card">
        <div class="stat-icon">‚úÖ</div>
        <div class="stat-info">
          <h3>S·∫£n Ph·∫©m ƒê√£ B√°n</h3>
          <div class="stat-number"><%= stats.soldProducts %></div>
        </div>
      </div>
    </div>

    <div class="chart-container" style="position: relative; height: 200px; width: 100%; margin-top: 30px">
      <h3>Th·ªëng k√™ s·∫£n ph·∫©m ƒë√£ b√°n</h3>
      <canvas id="salesChart"></canvas>
    </div>

    <div class="chart-container" style="position: relative; height: 250px; width: 100%; margin-top: 30px">
      <h3>T·ª∑ l·ªá s·∫£n ph·∫©m</h3>
      <canvas id="salesPieChart"></canvas>
    </div>
  </body>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const ctx = document.getElementById('salesChart').getContext('2d');
      const chartData = {
        labels: ["Th√°ng 1", "Th√°ng 2", "Th√°ng 3", "Th√°ng 4", "Th√°ng 5", "Th√°ng 6", "Th√°ng 7", "Th√°ng 8", "Th√°ng 9", "Th√°ng 10", "Th√°ng 11", "Th√°ng 12"],
        datasets: [{
          label: 'Doanh thu (VND)',
          data: <%- JSON.stringify(monthlyRevenue) %>,
          backgroundColor: 'rgba(75, 192, 192, 0.7)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1,
          barThickness: 30,
        }]
      };

      new Chart(ctx, {
        type: 'bar',
        data: chartData,
        options: {
          indexAxis: 'x',
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            title: {
              display: true,
              text: 'Doanh thu theo th√°ng'
            },
            legend: {
              display: true,
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  return `${context.label}: ${new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                  }).format(context.raw)}`;
                }
              }
            }
          },
          scales: {
            x: {
              barPercentage: 0.2,
              categoryPercentage: 0.3,
              maxBarThickness: 20,
            },
            y: {
              beginAtZero: true,
              ticks: {
                callback: function(value) {
                  return new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                  }).format(value);
                }
              }
            }
          }
        }
      });

      // Bi·ªÉu ƒë·ªì tr√≤n
      const ctxPie = document.getElementById('salesPieChart').getContext('2d');
      const pieChartData = {
        labels: ["S·∫£n Ph·∫©m ƒêang B√°n", "S·∫£n Ph·∫©m ƒê√£ B√°n"],
        datasets: [{
          data: [<%= stats.activeProducts %>, <%= stats.soldProducts %>],
          backgroundColor: ["#36A2EB", "#FF6384"],
          hoverBackgroundColor: ["#36A2EB", "#FF6384"]
        }]
      };

      new Chart(ctxPie, {
        type: 'doughnut',
        data: pieChartData,
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'bottom'
            },
            datalabels: {
              formatter: (value, ctx) => {
                let total = ctx.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);
                let percentage = ((value / total) * 100).toFixed(2) + "%";
                return percentage;
              },
              color: '#fff',
              font: {
                weight: 'bold'
              }
            }
          }
        },
        plugins: [ChartDataLabels]
      });
    });
  </script>

  <%- include('partials/footer') %>
</html>
