<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trang Cá Nhân</title>
    <style>
        body {
            margin: 0;
            font-family: 'Times New Roman';
        }

        .vintage-card {
            background: #fdf6e3; /* Màu nền giấy cũ */
            border: 2px solid #8b4513; /* Viền nâu đậm kiểu cổ */
            border-radius: 15px; /* Bo góc nhẹ */
            padding: 25px;
            margin: 20px auto;
            max-width: 600px; /* Độ rộng tối đa của card */
            box-shadow: 5px 5px 15px rgba(0,0,0,0.3), /* Bóng đổ kiểu cổ */
                      inset 0 0 10px rgba(139, 69, 19, 0.1); /* Đổ bóng bên trong */
            position: relative;
            animation: fadeIn 1s ease-in-out; /* Animation fade-in cho card */
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .vintage-card::before {
            content: '';
            position: absolute;
            top: -10px;
            left: -10px;
            right: -10px;
            bottom: -10px;
            border: 1px dashed #8b4513; /* Đường viền nét đứt kiểu cổ */
            border-radius: 20px;
            pointer-events: none;
        }

        .user-info-container h1 {
            font-family: 'Times New Roman'; /* Font chữ kiểu cổ */
            color: #8b4513;
            text-align: center;
            border-bottom: 2px solid #8b4513;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        .user-info-container h2 {
            font-family: 'Times New Roman';
            color: #5c4033;
            text-align: center;
            margin: 10px 0;
        }

        .user-info-item {
            font-family: 'Times New Roman';
            color: #5c4033;
            margin: 15px 0;
            padding: 10px;
            background: rgba(255, 245, 224, 0.5); /* Nền nhạt trong suốt */
            border-left: 4px solid #8b4513;
        }

        .edit-button {
            display: inline-block;
            padding: 10px 20px;
            background: #8b4513;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            font-family: 'Georgia', serif;
            transition: background 0.3s, transform 0.3s; /* Transition cho hover */
            text-align: center;
            margin-top: 20px;
            display: block;
            width: fit-content;
            margin-left: auto;
            margin-right: auto;
        }

        .edit-button:hover {
            background: #5c4033;
            transform: scale(1.05); /* Phóng to nhẹ khi hover */
        }

        .user-info-container img {
            display: block;
            margin: 0 auto;
            border: 3px solid #8b4513;
            border-radius: 50%;
            padding: 5px;
            background: #fff;
            width: 120px;
            height: 120px;
            object-fit: cover;
            transition: transform 0.3s; /* Transition cho hover */
        }

        .user-info-container img:hover {
            animation: pulse 1s infinite; /* Pulse effect khi hover */
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
            100% {
                transform: scale(1);
            }
        }
    </style>
</head>
<body>
    <!-- Header không có CSS -->
    <%- include('partials/header') %>

    <div class="vintage-card">
        <div class="user-info-container">
            <h1>Trang Cá Nhân</h1>
            <img src="<%= user.avatar || '/default-avatar.jpg' %>" alt="Avatar">
            <h2><%= user.name %></h2>

            <div class="user-info-item">
                <strong>Số Điện Thoại:</strong> <%= user.phone || 'Chưa cập nhật' %>
            </div>
            <div class="user-info-item">
                <strong>Email:</strong> <%= user.email %>
            </div>
            <div class="user-info-item">
                <strong>Ngày Sinh:</strong> <%= user.dob ? new Date(user.dob).toLocaleDateString('vi-VN') : 'Chưa cập nhật' %>
            </div>
            <div class="user-info-item">
                <strong>Giới Tính:</strong> <%= user.gender ? 'Nam' : 'Nữ' %>
            </div>
            <div class="user-info-item address-container">
                <strong>Địa Chỉ:</strong>
                <% if (user.address) { %>
                    <span><%= user.address %></span>
                <% } else { %>
                    <span>Chưa có địa chỉ</span>
                <% } %>
            </div>

            <!-- Button chỉnh sửa thông tin -->
            <a href="/user/profile/editprofile" class="edit-button">Chỉnh Sửa Thông Tin</a>
        </div>
    </div>

    <!-- Script để xử lý API địa chỉ -->
    <script>
        // Lấy danh sách tỉnh/thành phố từ API
        async function fetchProvinces() {
            try {
                const response = await fetch('https://vapi.vn/app/api/v2/provinces');
                const data = await response.json();
                const provinceSelect = document.getElementById('province');
                data.results.forEach(province => {
                    const option = document.createElement('option');
                    option.value = province.id;
                    option.textContent = province.name;
                    provinceSelect.appendChild(option);
                });
                provinceSelect.disabled = false;
            } catch (error) {
                console.error('Error fetching provinces:', error);
            }
        }

        // Lấy danh sách quận/huyện dựa trên tỉnh/thành phố
        async function fetchDistricts() {
            const provinceId = document.getElementById('province').value;
            const districtSelect = document.getElementById('district');
            const wardSelect = document.getElementById('ward');
            
            // Reset quận/huyện và phường/xã
            districtSelect.innerHTML = '<option value="">Chọn Quận/Huyện</option>';
            wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';
            districtSelect.disabled = true;
            wardSelect.disabled = true;

            if (provinceId) {
                try {
                    const response = await fetch(`https://vapi.vn/app/api/v2/districts?province_id=${provinceId}`);
                    const data = await response.json();
                    data.results.forEach(district => {
                        const option = document.createElement('option');
                        option.value = district.id;
                        option.textContent = district.name;
                        districtSelect.appendChild(option);
                    });
                    districtSelect.disabled = false;
                } catch (error) {
                    console.error('Error fetching districts:', error);
                }
            }
        }

        // Lấy danh sách phường/xã dựa trên quận/huyện
        async function fetchWards() {
            const districtId = document.getElementById('district').value;
            const wardSelect = document.getElementById('ward');
            
            // Reset phường/xã
            wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';
            wardSelect.disabled = true;

            if (districtId) {
                try {
                    const response = await fetch(`https://vapi.vn/app/api/v2/wards?district_id=${districtId}`);
                    const data = await response.json();
                    data.results.forEach(ward => {
                        const option = document.createElement('option');
                        option.value = ward.id;
                        option.textContent = ward.name;
                        wardSelect.appendChild(option);
                    });
                    wardSelect.disabled = false;
                } catch (error) {
                    console.error('Error fetching wards:', error);
                }
            }
        }

        // Gọi hàm fetchProvinces khi trang tải
        window.onload = fetchProvinces;

        // Thêm sự kiện change cho province và district
        document.getElementById('province')?.addEventListener('change', fetchDistricts);
        document.getElementById('district')?.addEventListener('change', fetchWards);
    </script>

    <!-- Footer không có CSS -->
    <%- include('partials/footer') %>
</body>
</html>