<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thông Tin Người Dùng</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
        }

        h1 {
            text-align: center;
            color: #333;
            font-size: 24px;
            margin-bottom: 20px;
        }

        .user-info-container {
            max-width: 500px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .user-info-container img {
            display: block;
            margin: 0 auto 20px;
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
        }

        .user-info-container h2 {
            text-align: center;
            font-size: 20px;
            color: #333;
            margin-bottom: 20px;
        }

        .user-info-item {
            margin-bottom: 15px;
            font-size: 16px;
            color: #555;
        }

        .user-info-item strong {
            color: #333;
            margin-right: 5px;
        }

        .address-container {
            margin-top: 20px;
        }

        .address-container select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .edit-button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #007BFF;
            color: #fff;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            text-align: center;
            text-decoration: none;
            cursor: pointer;
            margin-top: 20px;
        }

        .edit-button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <%- include('partials/header') %>
    <h1>Information User</h1>

    <div class="user-info-container">
        <img src="<%= user.avatar || '/default-avatar.jpg' %>" alt="Avatar">
        <h2><%= user.name %></h2>

        <div class="user-info-item">
            <strong>Phone:</strong> <%= user.phone || 'Chưa cập nhật' %>
        </div>
        <div class="user-info-item">
            <strong>Email:</strong> <%= user.email %>
        </div>
        <div class="user-info-item">
            <strong>Birthdate:</strong> <%= user.dob ? new Date(user.dob).toLocaleDateString('vi-VN') : 'Chưa cập nhật' %>
        </div>
        <div class="user-info-item">
            <strong>Gender:</strong> <%= user.gender ? 'Nam' : 'Nữ' %>
        </div>
        <div class="user-info-item address-container">
            <strong>Address:</strong>
            <% if (user.address) { %>
                <span><%= user.address %></span>
            <% } else { %>
                <div>
                    <select id="province" onchange="fetchDistricts()">
                        <option value="">Chọn Tỉnh/Thành phố</option>
                    </select>
                    <select id="district" onchange="fetchWards()" disabled>
                        <option value="">Chọn Quận/Huyện</option>
                    </select>
                    <select id="ward" disabled>
                        <option value="">Chọn Phường/Xã</option>
                    </select>
                </div>
            <% } %>
        </div>

        <!-- Sửa button để dùng route /editprofile/:userId -->
        <a href="/user/profile/editprofile" class="edit-button">Chỉnh Sửa Thông Tin</a>
    </div>

    <script>
        // Lấy danh sách tỉnh/thành phố từ API
        async function fetchProvinces() {
            try {
                const response = await fetch('https://vapi.vn/app/api/v2/provinces');
                const data = await response.json();
                const provinceSelect = document.getElementById('province');
                data.results.forEach(province => {
                    const option = document.createElement('option');
                    option.value = province.id;
                    option.textContent = province.name;
                    provinceSelect.appendChild(option);
                });
                provinceSelect.disabled = false;
            } catch (error) {
                console.error('Error fetching provinces:', error);
            }
        }

        // Lấy danh sách quận/huyện dựa trên tỉnh/thành phố
        async function fetchDistricts() {
            const provinceId = document.getElementById('province').value;
            const districtSelect = document.getElementById('district');
            const wardSelect = document.getElementById('ward');
            
            // Reset quận/huyện và phường/xã
            districtSelect.innerHTML = '<option value="">Chọn Quận/Huyện</option>';
            wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';
            districtSelect.disabled = true;
            wardSelect.disabled = true;

            if (provinceId) {
                try {
                    const response = await fetch(`https://vapi.vn/app/api/v2/districts?province_id=${provinceId}`);
                    const data = await response.json();
                    data.results.forEach(district => {
                        const option = document.createElement('option');
                        option.value = district.id;
                        option.textContent = district.name;
                        districtSelect.appendChild(option);
                    });
                    districtSelect.disabled = false;
                } catch (error) {
                    console.error('Error fetching districts:', error);
                }
            }
        }

        // Lấy danh sách phường/xã dựa trên quận/huyện
        async function fetchWards() {
            const districtId = document.getElementById('district').value;
            const wardSelect = document.getElementById('ward');
            
            // Reset phường/xã
            wardSelect.innerHTML = '<option value="">Chọn Phường/Xã</option>';
            wardSelect.disabled = true;

            if (districtId) {
                try {
                    const response = await fetch(`https://vapi.vn/app/api/v2/wards?district_id=${districtId}`);
                    const data = await response.json();
                    data.results.forEach(ward => {
                        const option = document.createElement('option');
                        option.value = ward.id;
                        option.textContent = ward.name;
                        wardSelect.appendChild(option);
                    });
                    wardSelect.disabled = false;
                } catch (error) {
                    console.error('Error fetching wards:', error);
                }
            }
        }

        // Gọi hàm fetchProvinces khi trang tải
        window.onload = fetchProvinces;
    </script>
    <%- include('partials/footer') %>
</body>
</html>